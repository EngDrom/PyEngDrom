from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtGui import *

class CustomMenuBar(QMenuBar):
    def __init__(self,codeeditor):
        super().__init__()
        self.fileMenu = self.addMenu("File")
        self.editMenu = self.addMenu("Edit")
        self.viewMenu = self.addMenu("View")
        self.helpMenu = self.addMenu("Help")
        self.fileMenu.addAction("New")
        self.fileMenu.addAction("Open")
        self.fileMenu.addAction("Save")
        self.fileMenu.addAction("Save As")
        self.editMenu.addAction("Undo")
        self.editMenu.addAction("Redo")
        self.editMenu.addAction("Cut")
        self.editMenu.addAction("Copy")
        self.editMenu.addAction("Paste")
        self.viewMenu.addAction("Zoom In")
        self.viewMenu.addAction("Zoom Out")
        self.viewMenu.addAction("Zoom Reset")
        self.helpMenu.addAction("About")
        # link actions to functions
        self.fileMenu.actions()[0].triggered.connect(codeeditor.new)
        self.fileMenu.actions()[1].triggered.connect(codeeditor.open)
        self.fileMenu.actions()[2].triggered.connect(codeeditor.save)
        self.fileMenu.actions()[3].triggered.connect(codeeditor.save_as)
        self.editMenu.actions()[0].triggered.connect(codeeditor.undo)
        self.editMenu.actions()[1].triggered.connect(codeeditor.redo)
        self.editMenu.actions()[2].triggered.connect(codeeditor.cut)
        self.editMenu.actions()[3].triggered.connect(codeeditor.copy)
        self.editMenu.actions()[4].triggered.connect(codeeditor.paste)
        self.viewMenu.actions()[0].triggered.connect(codeeditor.zoomIn)
        self.viewMenu.actions()[1].triggered.connect(codeeditor.zoomOut)
        self.viewMenu.actions()[2].triggered.connect(codeeditor.zoomReset)
        self.helpMenu.actions()[0].triggered.connect(codeeditor.about)
        # set shortcuts
        self.fileMenu.actions()[0].setShortcut("Ctrl+N")
        self.fileMenu.actions()[1].setShortcut("Ctrl+O")
        self.fileMenu.actions()[2].setShortcut("Ctrl+S")
        self.fileMenu.actions()[3].setShortcut("Ctrl+Shift+S")
        self.editMenu.actions()[0].setShortcut("Ctrl+Z")
        self.editMenu.actions()[1].setShortcut("Ctrl+Y")
        self.editMenu.actions()[2].setShortcut("Ctrl+X")
        self.editMenu.actions()[3].setShortcut("Ctrl+C")
        self.editMenu.actions()[4].setShortcut("Ctrl+V")
        self.viewMenu.actions()[0].setShortcut("Ctrl++")
        self.viewMenu.actions()[1].setShortcut("Ctrl+-")
        self.viewMenu.actions()[2].setShortcut("Ctrl+0")
        self.helpMenu.actions()[0].setShortcut("Ctrl+H")
        # set background color
        self.setStyleSheet("background-color: #2d2d30; color: #ffffff;padding-top:4px")
